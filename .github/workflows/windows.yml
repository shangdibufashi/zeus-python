name: Windows Build
on:
  push:
    branches:
      # - master
      - dev
      - releases
      - 'release-[0-9]+.*'
    tags:
      - '[0-9]+.*'
  pull_request:
    branches:
      - dev
      - releases
      - 'release-[0-9]+.*'
  workflow_dispatch:

env:
  publish_pre_dev_labels: '[]'
  CLOUDFLARED_VERSION: "2025.2.1"


jobs:
  win-build:
    runs-on: windows-latest
    timeout-minutes: 60
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        build_type: [release]
        python_version: ['3.8'] # ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          location: C:\msys2
          update: true
          msystem: MINGW64
          install: |
            git
            intltool
            zip
            unzip
            openssh
            wget
            mingw-w64-x86_64-editrights
            mingw-w64-x86_64-clang
          pacboy: |
            cc:p
            pkgconf:p
            cmake:p
            autotools:p
            ninja:p
            opencv:p
            libjxl:p


      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: 'pip'
      - name: Install Python dependencies
        run: |
          set -x
          echo "Python_ROOT_DIR=$Python_ROOT_DIR"
          ls -alh "$Python_ROOT_DIR"
          "$Python_ROOT_DIR"/python.exe -c "import platform; print('Python Version:', platform.python_version()); print('Build:', platform.python_build()); print('Compiler:', platform.python_compiler())"
          "$Python_ROOT_DIR"/python.exe --version
          "$Python_ROOT_DIR"/python.exe -m pip install -r src/requirements.txt

      - name: Prepare Libs
        run: |
          set -x
          wget -q https://github.com/shangdibufashi/zeus/releases/download/nightly-github-actions/win_release.zip -O zeus.zip
          unzip -q zeus.zip 
          cp -rf ./release/* src/zeus/
          ls -alh src/zeus/
          

      - name: Configure check
        working-directory: ./src
        run: |
          set -x
          ls -alh $Python_ROOT_DIR/libs/
          ls -alh $Python_ROOT_DIR/lib/site-packages/pybind11/share/cmake/pybind11/
          pwd

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          install-dependencies: true
          limit-access-to-actor: true
          detached: false

      - name: CMake build
        working-directory: ./src
        run: |
          set -x
          pversion="${{ matrix.python_version }}"
          pversion=$(echo "$pversion" | sed 's/\.//')
          pversion="python$pversion.lib"
          Python_ROOT_DIR=$(echo "$Python_ROOT_DIR" | sed 's/\\/\//g')
          export PYTHON_INCLUDE_DIR="$Python_ROOT_DIR/include" 
          export PYTHON_LIBRARY="$Python_ROOT_DIR/libs/" 
          export PYTHON_LIBRARY_FILE="$Python_ROOT_DIR/libs/$pversion" 
          export Python_EXECUTABLE="$Python_ROOT_DIR/python.exe"

          rm -rf build;
          cmake -G "MinGW Makefiles"  \
                  -DCMAKE_GNUtoMS=ON \
                  -DCMAKE_C_COMPILER=$(cygpath -w /mingw64/bin/clang) \
                  -DCMAKE_CXX_COMPILER=$(cygpath -w /mingw64/bin/clang++)  \
                  -DCMAKE_CXX_FLAGS_RELEASE="-O0" \
                  -DPython_ROOT_DIR="$Python_ROOT_DIR" \
                  -DPYTHON_LIBRARY_FILE="$PYTHON_LIBRARY_FILE" \
                  -DPYTHON_INCLUDE_DIR="$PYTHON_INCLUDE_DIR" \
                  -DPYTHON_LIBRARY="$PYTHON_LIBRARY" \
                  -DPython_EXECUTABLE="$Python_EXECUTABLE" \
                  -DCMAKE_BUILD_TYPE=RELEASE \
                  -S . -B build
          cmake --build build --verbose
          objdump -p   build/zeus.pyd  |grep dll

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     install-dependencies: true
      #     limit-access-to-actor: true
      #     detached: false
          
      - name: Prepare whl file
        working-directory: ./src
        run: |
          set -x
          mv zeus zeus_bak
          cp -rf zeus_bak/* C:/msys2/msys64/mingw64/bin/

          mkdir -p zeus
          cp -rf zeus_bak/*.py ./zeus/
          cp -f build/zeus.pyd ./zeus/
          ls -alh zeus/

          "$Python_ROOT_DIR"/python.exe \
              ./find_copy_dlls.py \
              --target_dir ./zeus/ \
              --initial_dlls zeus/zeus.pyd

      - name: build whl
        working-directory: ./src
        run: |
          rm -rf build dist
          set -x
          pversion="${{ matrix.python_version }}"
          pversion=$(echo "$pversion" | sed 's/\.//')
          pversion="cp$pversion"
          "$Python_ROOT_DIR"/python.exe setup_win10.py bdist_wheel --plat-name win_amd64 --python-tag=$pversion >> build.log 2>&1
          cat build.log
          ls -alh dist/
          "$Python_ROOT_DIR"/python.exe -m pip install dist/*.whl

      - name: Test build
        run: |
          "$Python_ROOT_DIR"/python.exe zeus_test.py

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          tag_name: nightly-github-actions
          files: |
            src/dist/*.whl
